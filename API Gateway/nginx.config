# Expose the JWT secret to Nginx server.
env JWT_SECRET;

user www-data;
worker_processes 2;
pid /var/run/nginx.pid;

events {
  worker_connections 1000;
  # multi_accept on;
}

http {
  upstream userserver {
    server 127.0.0.1:3000 weight=1 max_fails=3 fail_timeout=30s;
    #server 127.0.0.1:3001;
  }

  # https://www.nginx.com/blog/nginx-caching-guide/
  # https://serversforhackers.com/nginx-caching
  proxy_cache_path /tmp/nginx levels=1:2 keys_zone=my_zone:10m inactive=60m use_temp_path=off;

  limit_conn_zone $binary_remote_address zone=addr:10m
  limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;
  limit_req_zone $binary_remote_addr zone=two:10m rate=20r/m;

  server {
    listen 8080;
    server_name localhost;
    client_max_body_size 16M;
    keepalive_timeout 10;

    #error_page 401 403 404 /404.html;

    location / {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header Connection "";
      proxy_redirect off;
      proxy_cache my_zone;
      proxy_cache_revalidate on;
      proxy_cache_min_uses 1;
      proxy_cache_bypass $arg_nocache;#$http_cache_control $http_pragma;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_lock on;
      add_header X-Proxy-Cache $upstream_cache_status;

      proxy_pass http://userserver/api/;
    }

    location /search/ {
      limit_req zone=one burst=5 nodelay;
    }

    location /login/ {
      # If a single IP is making more than 1 request a second, new requests will be dropped.
      limit_req zone=two burst=1 nodelay;
      limit_req_status 403;
    }

    location /download/ {
      limit_rate 50k;
      limit_conn addr 1;
    }

    # Limit access only to the IPs of all the administrators.
    location /admin/ {
      allow 192.168.1.1/24;
      allow 10.0.0.1/24;
      deny  all;
    }


    access_log off;
    error_log /dev/null crit;
  }
}
